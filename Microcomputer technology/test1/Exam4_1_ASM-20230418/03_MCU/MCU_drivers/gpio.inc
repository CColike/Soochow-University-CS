//======================================================================
//文件名称：gpio.inc
//功能概要：STM32L432RC GPIO底层驱动构件（汇编）程序头文件
//版权所有：苏州大学嵌入式与物联网研究中心(sumcu.suda.edu.cn)
//更新记录：2019-09-27 V2.0
//======================================================================

//端口号地址偏移量宏定义
.equ PTA_NUM,(0<<8)
.equ PTB_NUM,(1<<8)
.equ PTC_NUM,(2<<8)
.equ PTD_NUM,(3<<8)
.equ PTE_NUM,(4<<8)
.equ PTH_NUM,(7<<8)

//GPIO引脚方向宏定义
.equ GPIO_IN,(0)
.equ GPIO_OUTPUT,(1)

//GPIO引脚中断类型宏定义
.equ RISING_EDGE,(1)   //上升沿触发
.equ FALLING_EDGE,(2)  //下降沿触发
.equ DOUBLE_EDGE,(3)   //双边沿触发

//引脚控制寄存器基地址宏定义(只给出PORTA的引脚控制寄存器PCR0的地址，其他由此计算）
.equ RCC_AHB2ENR_BASE,0x4002104C   //RCC->AHB2ENR寄存器基地址
//GPIO寄存器基地址宏定义(只给出PORTA的输出寄存器PDOR的地址，其他由此计算）
.equ GPIO_BASE,0x48000000          //GPIO寄存器基地址


//======================================================================
// 函数名称：gpio_init
// 函数返回：无
// 参数说明：r0:(端口号|(引脚号)),例:(PTB_NUM|(5u))表示B口5脚,头文件中有宏定义
//           r1:引脚方向（0=输入,1=输出,可用引脚方向宏定义）
//           r2:端口引脚初始状态（0=低电平，1=高电平）
// 功能概要：初始化指定端口引脚作为GPIO引脚功能，并定义为输入或输出。若是输出，
//           还指定初始状态是低电平或高电平
// 备    注：端口x的每个引脚控制寄存器PORTx_PCRn的地址=PORT_PCR_BASE+x*0x1000+n*4
//           其中:x=0~4，对应A~E;n=0~31
//======================================================================

//=====================================================================
//函数名称：gpio_set
//函数返回：无
// 参数说明：r0:(端口号|(引脚号)),例:(PTB_NUM|(5u))表示B口5脚,头文件中有宏定义
//           r1:希望设置的端口引脚状态（0=低电平，1=高电平）
//功能概要：当指定引脚被定义为GPIO功能且为输出时，本函数设定引脚状态
// 备    注：端口x的每个引脚控制寄存器PORTx_PCRn的地址=PORT_PCR_BASE+x*0x1000+n*4
//           其中:x=0~4，对应A~E;n=0~31
//=====================================================================

//======================================================================
// 函数名称：gpio_reverse
// 函数返回：无
// 参数说明：r0:(端口号)|(引脚号),例:(PTB_NUM|(5u))表示B口5脚,头文件中有宏定义
// 功能概要：反转指定引脚状态
//======================================================================

//======================================================================
// 函数名称：gpio_get
// 函数返回：r2:指定端口引脚的状态（1或0）
// 参数说明：r0:(端口号)|(引脚号),例:(PTB_NUM|(5u))表示B口5脚,头文件中有宏定义
// 功能概要：当指定端口引脚被定义为GPIO功能且为输入时，本函数获取指定引脚状态
//======================================================================
